/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.47
 * Generated at: 2018-02-27 04:19:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.burgerking;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path.js}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("<section>\r\n");
      out.write("<article>\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<hgroup>\r\n");
      out.write("\t\t\t<h1><mark>버거킹</mark> 주문 화면</h1>\r\n");
      out.write("\t\t\t<h6>상품과 수량을 선택해 주세요</h6>\r\n");
      out.write("\t\t</hgroup>\r\n");
      out.write("\t</header>\r\n");
      out.write("</article>\r\n");
      out.write("<article>\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t<figure>\r\n");
      out.write("\t\t\t\t<img src=\"../../img/hamburger.jpg\" style=\"width: 200px; height: 150px;\" alt=\"\" /><br />\r\n");
      out.write("\t\t\t\t<figcaption>\r\n");
      out.write("\t\t\t\t\t<input type=\"checkbox\" name=\"menu\" value=\"hamberger\"/>햄버거 ￦5,500\r\n");
      out.write("\t\t\t\t\t<input type=\"number\" name=\"hamburger-count\" style=\"width: 30px\" min=\"1\" max=\"9\" /> 개\r\n");
      out.write("\t\t\t\t</figcaption>\r\n");
      out.write("\t\t\t</figure>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t<figure>\r\n");
      out.write("\t\t\t\t<img src=\"../../img/coke.jpg\" style=\"width: 200px; height: 150px;\" alt=\"\" />\r\n");
      out.write("\t\t\t\t<figcaption>\r\n");
      out.write("\t\t\t\t\t<input type=\"checkbox\" name=\"menu\" value=\"coke\"/>콜라 : ￦1,000 \r\n");
      out.write("\t\t\t\t\t<input type=\"number\" name=\"coke-count\" style=\"width: 30px\" min=\"1\" max=\"9\" /> 개\r\n");
      out.write("\t\t\t\t</figcaption>\r\n");
      out.write("\t\t\t</figure>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t<figure>\r\n");
      out.write("\t\t\t\t<img src=\"../../img/chip.jpg\" style=\"width: 200px; height: 150px\" alt=\"\" />\r\n");
      out.write("\t\t\t\t<figcaption>\r\n");
      out.write("\t\t\t\t\t<input type=\"checkbox\" name=\"menu\" value=\"chip\"/>감자칩 : ￦1,000\r\n");
      out.write("\t\t\t\t\t<input type=\"number\" name=\"chip-count\" style=\"width: 30px\" min=\"1\" max=\"9\" /> 개\r\n");
      out.write("\t\t\t\t</figcaption>\r\n");
      out.write("\t\t\t</figure>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t<figure>\r\n");
      out.write("\t\t\t\t<img src=\"../../img/coffee.jpg\" style=\"width: 200px; height: 150px\" alt=\"\" />\r\n");
      out.write("\t\t\t\t<figcaption>\r\n");
      out.write("\t\t\t\t\t<input type=\"checkbox\" name=\"menu\" value=\"coffee\"/>커피 : ￦900\r\n");
      out.write("\t\t\t\t\t<input type=\"number\" name=\"coffee-count\" style=\"width: 30px\" min=\"1\" max=\"9\" /> 개\r\n");
      out.write("\t\t\t\t</figcaption>\r\n");
      out.write("\t\t\t</figure>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t<figure>\r\n");
      out.write("\t\t\t\t<img src=\"../../img/bagel.jpg\" style=\"width: 200px; height: 150px\" alt=\"\" />\r\n");
      out.write("\t\t\t\t<figcaption>\r\n");
      out.write("\t\t\t\t\t<input type=\"checkbox\" name=\"menu\" value=\"bagel\"/>베이글 : ￦4.000\r\n");
      out.write("\t\t\t\t\t<input type=\"number\" name=\"bagel-count\" style=\"width: 30px\" min=\"1\" max=\"9\" /> 개\r\n");
      out.write("\t\t\t\t</figcaption>\r\n");
      out.write("\t\t\t</figure>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t<figure>\r\n");
      out.write("\t\t\t\t<img src=\"../../img/salad.jpg\" style=\"width: 200px; height: 150px\" alt=\"\" />\r\n");
      out.write("\t\t\t\t<figcaption>\r\n");
      out.write("\t\t\t\t\t<input type=\"checkbox\" name=\"menu\" value=\"salad\"/>샐러드 : ￦3.000\r\n");
      out.write("\t\t\t\t\t<input type=\"number\" name=\"salad-count\" style=\"width: 30px\" min=\"1\" max=\"9\" /> 개\r\n");
      out.write("\t\t\t\t</figcaption>\t\t\t\r\n");
      out.write("\t\t\t</figure>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t<input type=\"radio\" name=\"place\" value=\"매장식사\"  checked/> 매장식사\r\n");
      out.write("\t\t\t\t<input type=\"radio\" name=\"place\" value=\"테이크아웃\"  /> 테이크아웃\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"hamburger\" value=\"5500\" />\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"coke\" value=\"1000\" />\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"chip\" value=\"1000\" />\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"coffee\" value=\"900\" />\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"bagel\" value=\"4000\" />\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"salad\" value=\"3000\" />\r\n");
      out.write("\t\t\t\t<input id=\"burgerking_order_btn\" type=\"button\" value=\"전 송\" style=\"width: 100px;margin-left:300px\"/>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</article>\r\n");
      out.write("</section>\r\n");
      out.write("<aside></aside>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
