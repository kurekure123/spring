package com.bitcamp.web.controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;

import com.bitcamp.web.command.Command;
import com.bitcamp.web.domain.MemberDTO;
import com.bitcamp.web.domain.PathDTO;
import com.bitcamp.web.factory.ContextFactory;
import com.bitcamp.web.mapper.MemberMapper;
import com.bitcamp.web.service.MemberService;
@SessionAttributes("user")
@Controller
public class UserController {
	private static final Logger logger = LoggerFactory.getLogger(UserController.class);
	@Autowired ContextFactory contextFactory;
	@Autowired PathDTO path;
	@Autowired MemberService mService;
	@Autowired MemberDTO member;
	@Autowired Command cmd;
	
	@RequestMapping("/login/{id}/{password}")
	public String login(Model model,@PathVariable("id") String userid,
			@PathVariable("password")String password){
	    logger.info("Move to {}", "user/login");
	    logger.info("login() ID is {}", userid);
	    logger.info("login() is {}", password);
	    member.setId(userid);
	    member.setPass(password);
	    cmd.setMember(member);
	    String path = null;
	    if (mService.exist(cmd)) {
	        model.addAttribute("user", mService.findMemberById(cmd));
	        path = "public:user/mypage.tiles";
	      } else {
	        path = "public:user/login.tiles";
	      }
		return path;
	}
	@RequestMapping("/nav")
	public String nav(Model model){
		logger.info("AuthController nav() : {} ", "ENTERED");
		model.addAttribute("path", path);
		return "public:common/nav.tiles";
	}
	@RequestMapping("/burgerking")
	public String burgerking(Model model) {
		logger.info("AuthController burgerking() : {} ", "ENTERED");
		model.addAttribute("path",path);
		return "public:burgerking/main.tiles";
	}
	@RequestMapping("/lotto")
	public String lotto() {
		logger.info("AuthController lotto() : {} ", "ENTERED");
		return "public:lotto/main.tiles";
	}
	@RequestMapping("/logout")
	public String logout(SessionStatus status) {
		status.setComplete();
		logger.info("[컨트롤러 : 로그아웃]");
		return "redirect:/login";
	}
	@RequestMapping("")
	public String join() {
		return null;	
	}
	@RequestMapping("/join/{id}/{pass}/{name}")
	public String join(@PathVariable("id") String id, @PathVariable("pass") String pass, @PathVariable("name") String name) {
		return "redirect:/login";	
	}
}
